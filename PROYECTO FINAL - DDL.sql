CREATE TABLE AUXILIAR(
AUXILIAR_ID VARCHAR (20) NOT NULL,
CODIGO_AUXILIAR VARCHAR (20) NOT NULL,
NOMBRE_AUXILIAR VARCHAR (35) NOT NULL,
APELLIDO_AUXILIAR VARCHAR (35) NOT NULL,
TELEFONO_AUXILIAR VARCHAR (20) NOT NULL,
ID_DIRECCION VARCHAR (20) NOT NULL,
ID_PROGRAMA_ACADEMICO VARCHAR (20) NOT NULL,
CONSTRAINT PK_AUXILIAR PRIMARY KEY (AUXILIAR_ID),
CONSTRAINT FK_DIRECCION_EN_AUXILIAR FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION (DIRECCION_ID),
CONSTRAINT FK_PROGRAMA_ACADEMICO_EN_AUXILIAR FOREIGN KEY (ID_PROGRAMA_ACADEMICO) REFERENCES PROGRAMA_ACADEMICO (PROGRAMA_ACADEMICO_ID)
);
COMMENT ON TABLE AUXILIAR IS 'Es la entidad que contiene los datos del auxiliar o estudiante que postula o puede observar las convocatorias.';
COMMENT ON COLUMN AUXILIAR.AUXILIAR_ID IS 'Es la llave primaria de la tabla, es distinto al codigo';
COMMENT ON COLUMN AUXILIAR.CODIGO_AUXILIAR IS 'Es la identificacion del auxiliar';
COMMENT ON COLUMN AUXILIAR.NOMBRE_AUXILIAR IS 'Es el nombre del auxiliar';
COMMENT ON COLUMN AUXILIAR.APELLIDO_AUXILIAR IS 'Es el apellido del auxiliar';
COMMENT ON COLUMN AUXILIAR.TELEFONO_AUXILIAR IS 'Es el telefono del auxiliar';
COMMENT ON COLUMN AUXILIAR.ID_DIRECCION IS 'Es el id de la direccion que tiene el auxiliar (normalizada)';
COMMENT ON COLUMN AUXILIAR.ID_PROGRAMA_ACADEMICO IS 'Es el programa académico al que pertenece el auxiliar (normalizada)';


CREATE TABLE DIRECCION(
DIRECCION_ID VARCHAR (20) NOT NULL,
CALLE VARCHAR (3) NOT NULL,
CARRERA VARCHAR (3) NOT NULL,
NUMERO VARCHAR (3) NOT NULL,
ID_CIUDAD VARCHAR (20) NOT NULL,
CONSTRAINT PK_DIRECCION PRIMARY KEY (DIRECCION_ID ),
CONSTRAINT FK_CIUDAD_EN_DIRECCION FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDAD (CIUDAD_ID) 
);
COMMENT ON TABLE DIRECCION IS 'Es la entidad que contiene los datos de las direcciones normalizadas.';
COMMENT ON COLUMN DIRECCION.DIRECCION_ID IS 'Es la la llave primaria de la tabla direccion';
COMMENT ON COLUMN DIRECCION.CALLE IS 'Es la calle normalizada de la direccion';
COMMENT ON COLUMN DIRECCION.CARRERA IS 'Es la carrera normalizada de la direccion';
COMMENT ON COLUMN DIRECCION.NUMERO IS 'Es el numero normalizado de la direccion';
COMMENT ON COLUMN DIRECCION.ID_CIUDAD IS 'Es la ciudad a la cual pertenece esa direccio (normalizada)';

CREATE TABLE CIUDAD (
CIUDAD_ID VARCHAR (20) NOT NULL,
NOMBRE_CIUDAD VARCHAR (20) NOT NULL,
CONSTRAINT PK_CIUDAD PRIMARY KEY (CIUDAD_ID),
);
COMMENT ON TABLE CIUDAD IS 'Es la entidad que contiene los datos de las ciudadades normalizadas.';
COMMENT ON COLUMN CIUDAD.CIUDAD_ID IS 'Es la la llave primaria de la tabla ciudad';
COMMENT ON COLUMN CIUDAD.NOMBRE_CIUDAD IS 'Es el nombre de la ciudad';

CREATE TABLE UNIVERSIDAD (
UNIVERSIDAD_ID VARCHAR (20) NOT NULL,
NOMBRE_UNIVERSIDAD VARCHAR (50) NOT NULL,
ID_DIRECCION VARCHAR (20) NOT NULL UNIQUE,
CONSTRAINT PK_UNIVERSIDAD PRIMARY KEY (UNIVERSIDAD_ID),
CONSTRAINT FK_DIRECCION_EN_UNIVERSIDAD FOREIGN KEY (DIRECCION_ID) REFERENCES DIRECCION (ID_DIRECCION),
);
COMMENT ON TABLE UNIVERSIDAD IS 'Es la entidad que contiene los datos de las universidades normalizadas.';
COMMENT ON COLUMN UNIVERSIDAD.UNIVERSIDAD_ID IS 'Es la la llave primaria de la tabla universidad';
COMMENT ON COLUMN UNIVERSIDAD.NOMBRE_UNIVERSIDAD IS 'Es el nombre de la universidad';
COMMENT ON COLUMN UNIVERSIDAD.DIRECCION_ID IS 'Es la direccion unica para la universidad.';

CREATE TABLE FACULTAD (
FACULTAD_ID VARCHAR (20) NOT NULL,
NOMBRE_FACULTAD VARCHAR (50) NOT NULL,
ID_UNIVERSIDAD VARCHAR (20) NOT NULL,
CONSTRAINT PK_FACULTAD PRIMARY KEY (FACULTAD_ID),
CONSTRAINT FK_FACULTAD_EN_UNIVERSIDAD FOREIGN KEY (ID_UNIVERSIDAD) REFERENCES UNIVERSIDAD (UNIVERSIDAD_ID) 
);
COMMENT ON TABLE FACULTAD IS 'Es la entidad que contiene los datos de las facultades que tiene una universidad normalizadas.';
COMMENT ON COLUMN FACULTAD.FACULTAD_ID IS 'Es la la llave primaria de la tabla facultad';
COMMENT ON COLUMN FACULTAD.NOMBRE_FACULTAD IS 'Es el nombre de la facultad';
COMMENT ON COLUMN FACULTAD.ID_UNIVERSIDAD IS 'Es la universidad a la cual pertenece la facultad';

CREATE TABLE AREA (
AREA_ID VARCHAR (20) NOT NULL,
NOMBRE_AREA VARCHAR (50) NOT NULL,
CONSTRAINT PK_AREA PRIMARY KEY (AREA_ID),
);
COMMENT ON TABLE AREA IS 'Es la entidad que contiene los datos de las areas a la cual pertenecen los solictantes.';
COMMENT ON COLUMN AREA.AREA_ID IS 'Es la la llave primaria de la tabla area';
COMMENT ON COLUMN AREA.NOMBRE_AREA IS 'Es el nombre del area';

CREATE TABLE CARGO(
CARGO_ID VARCHAR (20) NOT NULL,
NOMBRE_CARGO VARCHAR (50) NOT NULL,
CONSTRAINT PK_CARGO PRIMARY KEY (CARGO_ID),
);
COMMENT ON TABLE CARGO IS 'Es la entidad que contiene los datos de los cargos que tienen los solictantes.';
COMMENT ON COLUMN CARGO.CARGO_ID IS 'Es la la llave primaria de la tabla cargo';
COMMENT ON COLUMN CARGO.NOMBRE_CARGO IS 'Es el nombre del cargo';

CREATE TABLE SECRETARIA(
SECRETARIA_ID VARCHAR (20) NOT NULL,
NOMBRE_SECRETARIA VARCHAR (35) NOT NULL,
APELLIDO_SECRETARIA VARCHAR (35) NOT NULL,
TELEFONO_SECRETARIA VARCHAR (20) NOT NULL,
CONSTRAINT PK_SECRETARIA PRIMARY KEY (SECRETARIA_ID)
);
COMMENT ON TABLE SECRETARIA IS 'Es la entidad que contiene los datos de la tabla secretaria.';
COMMENT ON COLUMN SECRETARIA.SECRETARIA_ID IS 'Es la la llave primaria de la tabla secretaria';
COMMENT ON COLUMN SECRETARIA.NOMBRE_SECRETARIA IS 'Es el nombre de la secretaria';
COMMENT ON COLUMN SECRETARIA.APELLIDO_SECRETARIA IS 'Es el apellido de la secretaria';
COMMENT ON COLUMN SECRETARIA.TELEFONO_SECRETARIA IS 'Es el numero de telefono fijo o celular de la secretaria';

CREATE TABLE CONSEJO_CURRICULAR(
CONSEJO_CURRICULAR_ID VARCHAR (20) NOT NULL,
ID_SECRETARIA VARCHAR (35) NOT NULL UNIQUE,
CONSTRAINT PK_CONSEJO_CURRICULAR PRIMARY KEY (CONSEJO_CURRICULAR_ID),
CONSTRAINT FK_SECRETARIA_EN_CONSEJO FOREIGN KEY (ID_SECRETARIA) REFERENCES SECRETARIA (SECRETARIA_ID) 
);
COMMENT ON TABLE CONSEJO_CURRICULAR IS 'Es la entidad que contiene los datos de la tabla consejo curricular.';
COMMENT ON COLUMN CONSEJO_CURRICULAR.CONSEJO_CURRICULAR_ID IS 'Es la la llave primaria de la tabla consejo curricular';
COMMENT ON COLUMN CONSEJO_CURRICULAR.ID_SECRETARIA IS 'Es la secretaria adscrita al consejo curricular, es unica';

CREATE TABLE SOLICITANTE (
SOLICITANTE_ID VARCHAR (20) NOT NULL,
NOMBRE_SOLICITANTE VARCHAR (35) NOT NULL,
APELLIDO_SOLICITANTE VARCHAR (35) NOT NULL,
TELEFONO_SOLICITANTE VARCHAR (20) NOT NULL,
ID_DIRECCION VARCHAR (20) NOT NULL,
ID_CARGO VARCHAR (20) NOT NULL,
ID_AREA VARCHAR (20) NOT NULL,
ID_CONSEJO_CURRICULAR VARCHAR (20),
ID_PROGRAMA_ACADEMICO VARCHAR (20) NOT NULL,
CONSTRAINT PK_SOLICITANTE PRIMARY KEY (SOLICITANTE_ID),
CONSTRAINT FK_DIRECCION_EN_SOLICITANTE FOREIGN KEY (ID_DIRECCION) REFERENCES DIRECCION (DIRECCION_ID),
CONSTRAINT FK_CARGO_EN_SOLICITANTE FOREIGN KEY (ID_CARGO) REFERENCES CARGO(CARGO_ID),
CONSTRAINT FK_AREA_EN SOLICITANTE FOREIGN KEY (ID_AREA) REFERENCES AREA (AREA_ID),
CONSTRAINT FK_CONSEJO_CURRICULAR_EN_SOLICITANTE FOREIGN KEY (ID_CONSEJO_CURRICULAR) REFERENCES CONSEJO_CURRICULAR (CONSEJO_CURRICULAR_ID),
CONSTRAINT FK_PROGRAMA_ACADEMICO_EN_SOLICITANTE FOREIGN KEY (ID_PROGRAMA_ACADEMICO) REFERENCES PROGRAMA_ACADEMICO (PROGRAMA_ACADEMICO_ID)
);
COMMENT ON TABLE SOLICITANTE IS 'Es la entidad que contiene los datos del solicitante que es el que descubre las necesidades de auxiliares .';
COMMENT ON COLUMN SOLICITANTE.SOLICITANTE_ID IS 'Es la llave primaria de la tabla solicitante';
COMMENT ON COLUMN SOLICITANTE.NOMBRE_SOLICITANTE IS 'Es el nombre del solicitante';
COMMENT ON COLUMN SOLICITANTE.APELLIDO_SOLICITANTE IS 'Es elapellido del solicitante';
COMMENT ON COLUMN SOLICITANTE.TELEFONO_SOLICITANTE IS 'Es el telefono del solicitante';
COMMENT ON COLUMN SOLICITANTE.ID_DIRECCION IS 'Es la direccion del solicitante';
COMMENT ON COLUMN SOLICITANTE.ID_CARGO  IS 'Es el cargo que ocupa el solicitante';
COMMENT ON COLUMN SOLICITANTE.ID_AREA  IS 'Es el area a la cual pertenece el solicitante';
COMMENT ON COLUMN SOLICITANTE.ID_CONSEJO_CURRICULAR  IS 'Es es el consejo curricular al cual puede o no pertencer un solicitante';
COMMENT ON COLUMN SOLICITANTE.ID_PROGRAMA_ACADEMICO IS 'Es el eprograma academico al cual pertenece el solicitante.';

CREATE TABLE DIRECTORES (
ID_PROGRAMA VARCHAR (20) NOT NULL,
ID_SOLICITANTE VARCHAR (20) NOT NULL UNIQUE,
ID_JORNADA VARCHAR (20) NOT NULL,
CONSTRAINT PK_DIRECTORES PRIMARY KEY (ID_PROGRAMA, ID_JORNADA),
CONSTRAINT FK_PROGRAMA_EN_DIRECTORES FOREIGN KEY (ID_PROGRAMA) REFERENCES PROGRAMA_ACADEMICO (PROGRAMA_ACADEMICO_ID),
CONSTRAINT FK_SOLICITANTE_EN_DIRECTORES FOREIGN KEY (ID_SOLICITANTE)REFERENCES SOLICITANTE (SOLICITANTE_ID),
CONSTRAINT FK_JORNADA_EN_DIRECTORES FOREIGN KEY (ID_JORNADA) REFERENCES JORNADA (JORNADA_ID)
);
COMMENT ON TABLE DIRECTORES IS 'Es la entidad que contiene los datos de los directores de programa';
COMMENT ON COLUMN DIRECTORES.ID_PROGRAMA IS 'Es el programa al cual pertenece el director';
COMMENT ON COLUMN DIRECTORES.ID_SOLICITANTE  IS 'Es el nombre del director, el cual a su vez puede ser un solicitante';
COMMENT ON COLUMN DIRECTORES.ID_JORNADA IS 'Es la jornada del programa que dirige el solicitante';

CREATE TABLE PROGRAMA_ACADEMICO (
PROGRAMA_ACADEMICO_ID VARCHAR (20) NOT NULL,
ID_FACULTAD VARCHAR (20) NOT NULL,
ID_CONSEJO_CURRICULAR VARCHAR (20) NOT NULL,
ID_DIRECTOR VARCHAR (20) NOT NULL,
CONSTRAINT PK_PROGRAMA_ACADEMICO PRIMARY KEY (PROGRAMA_ACADEMICO_ID),
CONSTRAINT FK_FACULTAD_EN_PROGRAMA FOREIGN KEY (ID_FACULTAD) REFERENCES FACULTAD (FACULTAD_ID),
CONSTRAINT FK_
);

/*oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
/* CONVENCIONES 
  TABLAS DE MAS DE 2 PALABRAS SE UTILIZAN LAS 3 PRIMERAS LETRAS DE CADA PALABRA PARA LA LLAVE PRIMARIA
  
  PARA LAS LLAVES FORANEAS SE UTILIZA LA SIGUIENTE SINTAXIS (CAMBIAR LO QUE ESTA EN MINUSCULA):
  FK_nombreTablaForanea_EN_TablaActual
  
*/

































/*************************************************************************************************************************/

CREATE TABLE AUXILIAR(
AUX_ID VARCHAR2 (20) NOT NULL,
NOMBRE_AUX VARCHAR2 (50) NOT NULL,
APELLIDO_AUX VARCHAR2 (50) NOT NULL,
TELEFONO_AUX VARCHAR2 (20) NOT NULL, -- Falta normalizar Direccion, Programa académico--
CONSTRAINT PK_AUXILIAR PRIMARY KEY (AUX_ID)
);

COMMENT ON TABLE AUXILIAR IS 'Es la entidad que contiene los datos del auxiliar o estudiante que postula o puede observar las convocatorias.';
COMMENT ON COLUMN AUXILIAR.AUX_ID IS 'Es la identificacion del auxiliar y la llave primaria';
COMMENT ON COLUMN AUXILIAR.NOMBRE_AUX IS 'Es el nombre del auxiliar';
COMMENT ON COLUMN AUXILIAR.APELLIDO_AUX IS 'Es el apellido del auxiliar';
COMMENT ON COLUMN AUXILIAR.TELEFONO_AUX IS 'Es el telefono del auxiliar';

CREATE TABLE SOLICITANTE (
SOL_ID VARCHAR2 (20) NOT NULL,
NOMBRE_SOL VARCHAR2 (50) NOT NULL,
APELLIDO_SOL VARCHAR2 (50) NOT NULL,
TELEFONO_SOL VARCHAR2 (20) NOT NULL,--Falta normalizar area - Cargo - Direccion
CONSTRAINT PK_SOL PRIMARY KEY (SOL_ID),
);
COMMENT ON TABLE SOLICITANTE IS 'Es la entidad que contiene los datos del solicitante quien describe la necesidad del auxiliar.';
COMMENT ON COLUMN SOLICITANTE.SOL_ID IS 'Es la identificacion del solicitante y la llave primaria';
COMMENT ON COLUMN SOLICITANTE.NOMBRE_SOL IS 'Es el nombre del solicitante';
COMMENT ON COLUMN SOLICITANTE.APELLIDO_SOL IS 'Es el apellido del solicitante';
COMMENT ON COLUMN SOLICITANTE.TELEFONO_SOL IS 'Es el telefono del solicitante';

CREATE TABLE PROGRAMA_ACADEMICO(
  PRO_ACA_ID VARCHAR2(20) NOT NULL,
  NOMBRE_PRO_ACA VARCHAR2(50) NOT NULL,
  ID_FACULTAD VARCHAR2(2) NOT NULL,
  
  CONSTRAINT PK_PROGRAMA_ACADEMICO PRIMARY KEY (PRO_ACA_ID),
  CONSTRAINT FK_FACULTAD_EN_PROGRAMA_ACADEMICO FOREIGN KEY (ID_FACULTAD) REFERENCES FACULTAD (FACULTAD_ID)
);

CREATE TABLE FACULTAD(
  FACULTAD_ID VARCHAR2(2) NOT NULL,
  NOMBRE_FACULTAD VARCHAR2(50) NOT NULL,
  ID_UNIVERSIDAD VARCHAR2(5) NOT NULL,
  
  CONSTRAINT PK_FACULTAD PRIMARY KEY (ID_UNIVERSIDAD),
  CONSTRAINT FK_UNIVERSIDAD_EN_FACULTAD FOREIGN KEY (ID_UNIVERSIDAD) REFERENCES UNIVERSIDAD (UNIVERSIDAD_ID)
);


CREATE TABLE UNIVERSIDAD(
  UNIVERSIDAD_ID Varchar (20) NOT NULL,
  NOMBRE_UNIVERSIDAD VARCHAR (20) NOT NULL,
  
  CONSTRAINT PK_UNIVERSIDAD PRIMARY KEY (UNIVERSIDAD_ID)
);


CREATE TABLE HORARIO_ACTIVIDADES (
HOR_ACT_ID VARCHAR (20) NOT NULL,
FECHA_CREACION_HOR_ACT DATE NOT NULL,
ID_TIPO_AUX VARCHAR (20),
ID_AUXILIAR VARCHAR (20) NOT NULL,

CONSTRAINT PK_HORARIO_ACTIVIDADES PRIMARY KEY (HOR_ID),
CONSTRAINT FK_TIPO_AUXILIARES_EN_HORARIO_ACTIVIDADES FOREIGN KEY (ID_TIPO_AUX) REFERENCES TIPO_AUXILIAR (TIP_AUX), 
CONSTRAINT FK_ID_AUXILIAR_EN_HORARIO_ACTIVIDADES FOREIGN KEY (ID_AUXILIAR) REFERENCES AUXILIAR (AUX_ID)
);




CREATE TABLE FECHA_HORARIO (
FEC_HOR_ID VARCHAR (20) NOT NULL,
FECHA_FEC_HOR DATE NOT NULL,
ID_HOR_ACT VARCHAR (20) NOT NULL,
CONSTRAINT PK_FECHA_HORARIO PRIMARY KEY (FEC_HOR_ID),
CONSTRAINT FK_HORARIO_ACTIVIDADES_EN_FECHA_HORARIO FOREIGN KEY (ID_HOR_ACT) REFERENCES HORARIO_ACTIVIDADES (HOR_ACT_ID)
);

CREATE TABLE HORA (
HOR_ID VARCHAR (20) NOT NULL,
HORA_INICIO VARCHAR (20) NOT NULL,
HORA_FIN VARCHAR (20) NOT NULL,
ID_FECHA_HORARIO VARCHAR (20) NOT NULL,
CONSTRAINT PK_HORA PRIMARY KEY (HOR_ID),
CONSTRAINT FK_FECHA_HORARIO_EN_HORA FOREIGN KEY (ID_FECHA_HORARIO) REFERENCES FECHA_HORARIO (FEC_HOR_ID)
);

CREATE TABLE TIPO_AUXILIAR (
TIP_AUX_ID VARCHAR (20) NOT NULL,
DESCRIPCION_TIP_AUX VARCHAR (30) NOT NULL,
CONSTRAINT PK_TIPO_AUXILIAR PRIMARY KEY (TIP_AUX_ID)
);

RESOLUCION_AUXILIARES_SELECICONADOS(
RESOLUCION_ID VARCHAR (20) NOT NULL
DESCRIPCION VARCHAR (255) NOT NULL,
ID_TIPO_AUXILIAR VARCHAR (20) NOT NULL,
ID_AUXILIAR VARCHAR2 (20) NOT NULL,
PROMEDIO_AUXILIAR VARCHAR (20) NOT NULL,
HORAS_SEMESTRALES VARCHAR (2) NOT NULL,
VALOR_A_PAGAR VARCHAR (7) NOT NULL,
NOMBRE_SOLICITANTE VARCAHR (35) NOT NULL,
NOMBRE_DIRECTOR_PROGRAMA VARCHAR (35)NOT NULL,
NOMBRE_DECANO VARCHAR (35)NOT NULL,
CONSTRAINT PK_RES_AUX_SEL PRIMARY KEY (RESOLUCION_ID),
CONSTRAINT FK_ID_AUXILIAR_EN_RESOLUCION FOREIGN KEY (ID_AUXILIAR) REFERENCES AUXILIAR(AUX_ID),
CONSTRAINT FK_ID_TIPO_AUXILIAR_EN_RESOLUCION FOREIGN KEY (ID_TIPO_AUXILIAR) REFERENCES TIPO_AUXILIAR(TIPO_AUX_ID),
);
COMMENT ON TABLE RESOLUCION_AUXILIARES_SELECICONADOS IS 'Es la entidad que contiene los datos de las resoluciones de cada convocatoria.';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.RESOLUCION_ID IS 'Es la identificacion del auxiliar y la llave primaria.';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.DESCRIPCION IS 'Es la descripción del la resolución';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.ID_TIPO_AUXILIAR IS 'Es el tipo de auxiliar para el cual fue abierta la convocatoria';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.ID_AUXILIAR IS 'Es la identificacion del auxiliar seleccionado';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.PROMEDIO_AUXILIAR IS 'Es el promedio del auxiliar seleccionado.';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.HORAS_SEMESTRALES IS 'Es la cantidad de horas semestrales asignadas al auxiliar';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.VALOR_A_PAGAR IS 'Es le valor a pagar a cada auxiliar';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.NOMBRE_SOLICITANTE IS 'Es el nombre del solicitante de la convocatoria';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.NOMBRE_DIRECTOR_PROGRAMA IS 'Es el nombre director del programa';
COMMENT ON COLUMN RESOLUCION_AUXILIARES_SELECICONADOS.NOMBRE_DECANO IS 'Es el nombre del decano de la facultad';

CREATE TABLE DOCUMENTO_INCONFORMIDAD(
	DOC_INC_ID VARCHAR2(20) NOT NULL,
	FECHA_CREACION_DOC_INC DATE NOT NULL,
	DESCRIPCION VARCHAR2(255) NOT NULL,
	
	CONSTRAINT PK_DOCUMENTO_INCONFORMIDAD PRIMARY KEY (DOC_INC_ID)

);

CREATE TABLE DOCUMENTO_INCONFORMIDAD_AUXILIAR(
	ID_DOC_INC VARCHAR2(20) NOT NULL,
	ID_AUX VARCHAR2(20) NOT NULL,


	CONSTRAINT FK_AUXILIAR_EN_DOCUMENTO_INCONFORMIDAD_AUXILIAR FOREIGN KEY (ID_AUX) REFERENCES AUXILIAR (AUX_ID),
	CONSTRAINT FK_DOCUMENTO_INCONFORMIDAD_EN_DOCUMENTO_INCONFORMIDAD_AUXILIAR FOREIGN KEY (ID_DOC_INC) REFERENCES DOCUMENTO_INCONFORMIDAD (DOC_INC_ID)
);
